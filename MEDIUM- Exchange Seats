Mary is a teacher in a middle school and she has a table seat storing students' names and their corresponding seat ids.

The column id is continuous increment.
Mary wants to change seats for the adjacent students.
Can you write a SQL query to output the result for Mary?
+---------+---------+
|    id   | student |
+---------+---------+
|    1    | Abbot   |
|    2    | Doris   |
|    3    | Emerson |
|    4    | Green   |
|    5    | Jeames  |
+---------+---------+
For the sample input, the output is:
+---------+---------+
|    id   | student |
+---------+---------+
|    1    | Doris   |
|    2    | Abbot   |
|    3    | Green   |
|    4    | Emerson |
|    5    | Jeames  |
+---------+---------+
Note:
If the number of students is odd, there is no need to change the last one's seat

# select id - 1 if the id was div by 2
select s1.id - 1 as id, s1.student from seat s1 where s1.id mod 2 = 0

union

# select id + 1 if the id was NOT div by 2
select s2.id + 1 as id, s2.student from seat s2 where s2.id mod 2 = 1 and s2.id != (select count(*) from seat)

union

# select id if the id was NOT div by 2 and was the last element
# this select will return nothing if there are even number of elements
select s3.id as id, s3.student from seat s3 where s3.id mod 2 = 1 and s3.id =  (select count(*) from seat)

# order by asc order of id
order by id asc



LATEST ANSWER BY SWATI 4/4/2021:
SELECT CASE WHEN MOD(ID,2) =1 AND ID!=(SELECT COUNT(*) FROM SEAT)  THEN
			ID-1
	          ELSE ID+1
	          END AS ID, STUDENT
FROM SEAT
ORDER BY ID










