Write a SQL query to rank scores. If there is a tie between two scores, both should have the same ranking. Note that after a tie, the next ranking number should be the next consecutive integer value. In other words, there should be no "holes" between ranks.

+----+-------+
| Id | Score |
+----+-------+
| 1  | 3.50  |
| 2  | 3.65  |
| 3  | 4.00  |
| 4  | 3.85  |
| 5  | 4.00  |
| 6  | 3.65  |
+----+-------+
For example, given the above Scores table, your query should generate the following report (order by highest score):

+-------+------+
| Score | Rank |
+-------+------+
| 4.00  | 1    |
| 4.00  | 1    |
| 3.85  | 2    |
| 3.65  | 3    |
| 3.65  | 3    |
| 3.50  | 4    |
+-------+------+

select s.score, (select count(distinct(score)) from Scores where score >= s.score) as Rank
from Scores s order by s.score desc

# take 4.0 score (highest score), now take a count of all distinct scores that are >= to 4.0, in the table only 4.0 is >= 4.0 (our score). Hence count(distinct(4.0)) = 1. Hence, rank of first 4.0 is 1

# take, 3.65 score (3rd highest score), now take count of all distinct scores >= 3.65, we get x = 4.0, 3.85, 3.65. Hence count(distinct(x)) is 3, hence rank of 3.65 is 3
