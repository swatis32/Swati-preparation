The Employee table holds all employees. Every employee has an Id, and there is also a column for the department Id.

+----+-------+--------+--------------+
| Id | Name  | Salary | DepartmentId |
+----+-------+--------+--------------+
| 1  | Joe   | 70000  | 1            |
| 2  | Henry | 80000  | 2            |
| 3  | Sam   | 60000  | 2            |
| 4  | Max   | 90000  | 1            |
| 5  | Janet | 69000  | 1            |
| 6  | Randy | 85000  | 1            |
+----+-------+--------+--------------+
The Department table holds all departments of the company.

+----+----------+
| Id | Name     |
+----+----------+
| 1  | IT       |
| 2  | Sales    |
+----+----------+
Write a SQL query to find employees who earn the top three salaries in each of the department. For the above tables, your SQL query should return the following rows.

+------------+----------+--------+
| Department | Employee | Salary |
+------------+----------+--------+
| IT         | Max      | 90000  |
| IT         | Randy    | 85000  |
| IT         | Joe      | 70000  |
| Sales      | Henry    | 80000  |
| Sales      | Sam      | 60000  |
+------------+----------+--------+


LATEST ANSWER USING WINDOW FUNCTION on 5/19/2021

Select department, Name, Salary from
(Select department, Name, Salary , denserank()OVER(order by SALARY DESC GROUP BY DEPARTMENT) as nums from employee join department on employee.departmentid=department.id) T1
Where T1.nums <=3


# Write your MySQL query statement below
select d.name as 'Department', e.name as 'Employee', e.salary as 'Salary'
from employee e join department d on e.departmentid = d.id
where e.salary in
### the current salary must be in top 3 salaries of the department
(select e2.salary from employee e2 where e2.departmentid = d.id order by e2.salary desc limit 3)

### the above solution is correct, however it doesnt work with OJ's version of MYSQL

select d.Name Department, e1.Name Employee, e1.Salary
from Employee e1
join Department d
on e1.DepartmentId = d.Id
where 3 > (select count(distinct(e2.Salary))
                  from Employee e2
                  where e2.Salary > e1.Salary
                  and e1.DepartmentId = e2.DepartmentId
                  );

### The subquery does the following: it creates another table and compares whether any of those salaries is greater than present salary (e1.salary), if it is - then count increases, we only display the row if this count was 0,1 or 2 - ie if the current salary was the highest, 2nd highest or third highest


My solution:
select d.dept_name, e.name, e.salary from e employee join department d on e.dept_id=d.dept_id

where (select count(distinct e2.salary) from employee e2 where e.dept_id=e2.dept_id and e2.salary>e.salary)<3








